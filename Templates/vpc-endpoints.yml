# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This template creates the VPC Endpoints that we use to accsess AWS services
  in the Private Subnets.

Parameters:

  Environment:
    AllowedValues:
      - 'dev'
      - 'devops'
      - 'uat'
    Description: >-
      Set environment in which the VPC will be created.
    Type: String

  NetworkStackName:
    Type: String

Resources:
  EC2MessagesEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.ec2messages
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  EC2Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.ec2
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  ImagebuilderEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.imagebuilder
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  SecretsManagerEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.secretsmanager
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  GlueEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.glue
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  StepFunctionsEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.states
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  KMSEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.kms
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  SSMEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.ssm
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  ECSEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.ecs
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  ECSAgentEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.ecs-agent
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  ECSTelemetryEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.ecs-telemetry
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  SSMMessagesEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.ssmmessages
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  CloudWatchEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.logs
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  CloudWatchEventsEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.events
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  CodeArtifactRepoEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.codeartifact.repositories
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  CodeArtifactAPIEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: false
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.codeartifact.api
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  ECREndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.ecr.api
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  ECRDkrEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.ecr.dkr
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  GitCodeCommitEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.git-codecommit
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  CodeCommitEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.codecommit
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  CodePipelineEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.codepipeline
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  StsEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.sts
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  SageMakerRuntimeEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.sagemaker.runtime
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  SageMakerAPIEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.sagemaker.api
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  ExecuteAPIEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.execute-api
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  ElasticMapReduceEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.elasticmapreduce
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  ElasticLoadBalancingEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.elasticloadbalancing
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  CloudTrailEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.cloudtrail
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  AthenaEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.athena
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  S3EndPoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      RouteTableIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnetRouteTable1"
      ServiceName: com.amazonaws.us-east-1.s3
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"
      VpcEndpointType: Gateway

  DynamoEndPoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      RouteTableIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnetRouteTable1"
      ServiceName: com.amazonaws.us-east-1.dynamodb
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"
      VpcEndpointType: Gateway

  SQSEndPoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.sqs
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  SNSEndPoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.sns
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  ConfigEndPoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EndpointSG
      ServiceName: com.amazonaws.us-east-1.config
      SubnetIds:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z1ID"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2Z2ID"
      VpcEndpointType: Interface
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

  EndpointSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Endpoint Base Security Group
      GroupName: !Join [ "-", [ !Ref Environment, vpc, endpoints, sg ] ]
      SecurityGroupIngress:
      - IpProtocol: tcp
        CidrIp:
          Fn::ImportValue: !Sub "${NetworkStackName}-VPCCIDR"
        FromPort: 443
        ToPort: 443
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
      VpcId:
        Fn::ImportValue: !Sub "${NetworkStackName}-VPCID"

Outputs:

  DynamoEndPoint:
    Description: Dynamo Interface VPC Endpoint
    Value: !Ref DynamoEndPoint
    Export:
      Name: !Sub '${AWS::StackName}-DynamoEndPoint'

  SQSEndPoint:
    Description: SQS Interface VPC Endpoint
    Value: !Ref SQSEndPoint
    Export:
      Name: !Sub '${AWS::StackName}-SQSEndPoint'

  SNSEndPoint:
    Description: SNS Interface VPC Endpoint
    Value: !Ref SNSEndPoint
    Export:
      Name: !Sub '${AWS::StackName}-SNSEndPoint'

  ConfigEndPoint:
    Description: Config VPC Endpoint
    Value: !Ref ConfigEndPoint
    Export:
      Name: !Sub '${AWS::StackName}-ConfigEndPoint'

  CloudTrailEndpoint:
    Description: CloudTrail Interface VPC Endpoint
    Value: !Ref CloudTrailEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-CloudTrailEndpoint'

  AthenaEndpoint:
    Description: Athena Interface VPC Endpoint
    Value: !Ref AthenaEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-AthenaEndpoint'

  ElasticMapReduceEndpoint:
    Description: ElasticMapReduce Interface VPC Endpoint
    Value: !Ref ElasticMapReduceEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-ElasticMapReduceEndpoint'

  ElasticLoadBalancingEndpoint:
    Description: Elastic Load Balancing Interface VPC Endpoint
    Value: !Ref ElasticLoadBalancingEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-ElasticLoadBalancingEndpoint'

  ExecuteAPIEndpoint:
    Description: Execute API Interface VPC Endpoint
    Value: !Ref ExecuteAPIEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-ExecuteAPIEndpoint'

  SageMakerRuntimeEndpoint:
    Description: SageMaker Runtime Interface VPC Endpoint
    Value: !Ref SageMakerRuntimeEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-SageMakerRuntimeEndpoint'

  SageMakerAPIEndpoint:
    Description: SageMaker Interface VPC Endpoint
    Value: !Ref SageMakerAPIEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-SageMakerAPIEndpoint'

  StsEndpoint:
    Description: StsEndpoint Interface VPC Endpoint
    Value: !Ref StsEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-StsEndpoint'

  GitCodeCommitEndpoint:
    Description: GitCodeCommit VPC Endpoint
    Value: !Ref GitCodeCommitEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-GitCodeCommitEndpoint'

  CodeCommitEndpoint:
    Description: CodeCommit VPC Endpoint
    Value: !Ref CodeCommitEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-CodeCommitEndpoint'

  CodePipelineEndpoint:
    Description: CodePipeline VPC Endpoint
    Value: !Ref CodePipelineEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-CodePipelineEndpoint'

  S3EndPoint:
    Description: S3 Gateway VPC Endpoint
    Value: !Ref S3EndPoint
    Export:
      Name: !Sub '${AWS::StackName}-S3EndPoint'

  ECRDkrEndpoint:
    Description: ECR Docker Interface VPC Endpoint
    Value: !Ref ECRDkrEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-ECRDkrEndpoint'

  ECREndpoint:
    Description: ECR Interface VPC Endpoint
    Value: !Ref ECREndpoint
    Export:
      Name: !Sub '${AWS::StackName}-ECREndpoint'

  CodeArtifactAPIEndpoint:
    Description: CodeArtifactAPI Interface VPC Endpoint
    Value: !Ref CodeArtifactAPIEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-CodeArtifactAPIEndpoint'

  CodeArtifactRepoEndpoint:
    Description: CodeArtifact Repository Endpoint Interface VPC Endpoint
    Value: !Ref CodeArtifactRepoEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-CodeArtifactRepoEndpoint'

  CloudWatchEndpoint:
    Description: CloudWatch Interface VPC Endpoint
    Value: !Ref CloudWatchEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-CloudWatchEndpoint'

  CloudWatchEventsEndpoint:
    Description: CloudWatchEventsEndpoint Interface VPC Endpoint
    Value: !Ref CloudWatchEventsEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-CloudWatchEventsEndpoint'

  SSMMessagesEndpoint:
    Description: Systems Manager Messages Interface VPC Endpoint
    Value: !Ref SSMMessagesEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-SSMMessagesEndpoint'

  SSMEndpoint:
    Description: Systems Manager Interface VPC Endpoint
    Value: !Ref SSMEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-SSMEndpoint'

  KMSEndpoint:
    Description: KMS Interface VPC Endpoint
    Value: !Ref KMSEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-KMSEndpoint'

  StepFunctionsEndpoint:
    Description: Step Functions Interface VPC Endpoint
    Value: !Ref StepFunctionsEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-StepFunctionsEndpoint'

  GlueEndpoint:
    Description: Glue Interface VPC Endpoint
    Value: !Ref GlueEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-GlueEndpoint'

  SecretsManagerEndpoint:
    Description: Secrets Manager Interface VPC Endpoint
    Value: !Ref SecretsManagerEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-SecretsManagerEndpoint'

  EC2Endpoint:
    Description: EC2 Interface VPC Endpoint
    Value: !Ref EC2Endpoint
    Export:
      Name: !Sub '${AWS::StackName}-EC2Endpoint'

  EC2MessagesEndpoint:
    Description: EC2 Messages Interface VPC Endpoint
    Value: !Ref EC2MessagesEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-EC2MessagesEndpoint'

  ImagebuilderEndpoint:
    Description: ImageBuilder Interface VPC Endpoint
    Value: !Ref ImagebuilderEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-ImagebuilderEndpoint'

  ECSEndpoint:
    Description: ECS Interface VPC Endpoint
    Value: !Ref ECSEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-ECSEndpoint'

  ECSAgentEndpoint:
    Description: ECS Agent Interface VPC Endpoint
    Value: !Ref ECSAgentEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-ECSAgentEndpoint'

  ECSTelemetryEndpoint:
    Description: ECS Telemetry Interface VPC Endpoint
    Value: !Ref ECSTelemetryEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-ECSTelemtryEndpoint'
